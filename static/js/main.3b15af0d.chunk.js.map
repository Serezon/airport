{"version":3,"sources":["api/api.js","services/service.js","components/Header/Header.js","components/Search/Search.js","components/Table/Table.js","App.js","serviceWorker.js","index.js"],"names":["getData","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","date","response","data","wrap","_context","prev","next","fetch","concat","sent","json","abrupt","body","stop","_x","apply","this","arguments","currentDay","number","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","Header","react_default","createElement","className","src","alt","Search","onSubmit","textInput","React","createRef","action","event","type","id","placeholder","ref","onClick","departureConfig","ArrivalConfig","Table","config","status","getConfig","includes","map","item","key","ID","header","i","en","name","codeShare","match","App","state","searchValue","day","defineDayDate","handleSubmit","preventDefault","_this","setState","current","value","switchTabTo","getDataByStatus","departure","arrival","handleDayTabTo","filteredList","list","filter","toLowerCase","codeShareData","_this2","then","filteredData","prevProp","prevState","_this3","_this4","_this$state","activeDep","activeArr","Fragment","components_Header_Header","components_Search_Search","onChange","handleInput","components_Table_Table","Component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3b15af0d.chunk.js","sourcesContent":["export const getData = async date => {\n  const response = await fetch(`https://api.iev.aero/api/flights/${date}`);\n  const data = await response.json();\n  return data.body;\n};\n","export const currentDay = (number) => {\n  let today = new Date();\n  let dd = today.getDate() + number;\n  let mm = today.getMonth() + 1 ;\n  let yyyy = today.getFullYear();\n\n  if (dd < 10) dd = \"0\" + dd;\n  if (mm < 10) mm = \"0\" + mm;\n \n  return `${dd}-${mm}-${yyyy}`;\n};\n","import React from \"react\";\n\nconst Header = () => {\n  return (\n    <div className=\"header-container\">\n      <div className=\"logo\">\n        <img src=\"./assets/logo.a3d810f.png\" alt=\"logo\" />\n      </div>\n      <div className=\"nav-bar\">\n        <ul className=\"nav-list\">\n          <li className=\"nav-item\">\n            <span className=\"nav-item-sp\">For passengers</span>\n          </li>\n          <li className=\"nav-item\">\n            <span className=\"nav-item-sp\">IEV Services</span>\n          </li>\n          <li className=\"nav-item\">\n            <span className=\"nav-item-sp\">VIP</span>\n          </li>\n          <li className=\"nav-item\">\n            <span className=\"nav-item-sp\">Corporate</span>\n          </li>\n          <li className=\"nav-item\">\n            <span className=\"nav-item-sp\">EN</span>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Search = ({ onSubmit }) => {\n  let textInput = React.createRef();\n  return (\n    <div className=\"flights-search-container\">\n      <div className=\"flights-search\">\n        <div className=\"search\">\n          <h2 className=\"title\">search flights</h2>\n          <div className=\"search-input-container\">\n            <form\n              action=\"/\"\n              className=\"search-form\"\n              onSubmit={event => onSubmit(event, textInput)}\n            >\n              <span className=\"icon\">\n                <i className=\"fa fa-search\" />\n              </span>\n              <input\n                type=\"search\"\n                id=\"search\"\n                placeholder=\"Destination or flight #\"\n                ref={textInput}\n              />\n              <button\n                onClick={event => onSubmit(event, textInput)}\n                className=\"button\"\n                type=\"submit\"\n              >\n                Search\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\n\nconst departureConfig = [\n  \"term\",\n  \"timeDepShedule\",\n  \"airportToID.city_en\",\n  \"status\",\n  \"airline\",\n  \"codeShareData\",\n  \"gateNo\"\n];\n\nconst ArrivalConfig = [\n  \"term\",\n  \"timeArrShedule\",\n  \"airportFromID.city_en\",\n  \"status\",\n  \"airline\",\n  \"codeShareData\"\n];\n\nconst getConfig = (status, departureConfig, ArrivalConfig) => {\n  if (status === \"departure\") {\n    return departureConfig;\n  } else {\n    return ArrivalConfig;\n  }\n};\n\nconst Table = ({ data, status }) => {\n  const config = getConfig(status, departureConfig, ArrivalConfig);\n\n  return (\n    <table className=\"table\">\n      <thead className=\"thead\">\n        <tr>\n          <th>Terminal</th>\n          <th>Time</th>\n          <th>Destination</th>\n          <th>Status</th>\n          <th>Airline</th>\n          <th>Flight</th>\n          {config.includes(\"gateNo\") ? <th>Gate</th> : null}\n        </tr>\n      </thead>\n      <tbody className=\"tbody\">\n        {data.map(item => {\n          return (\n            <tr key={item.ID}>\n              {config.map((header, i) => {\n                if (header === \"airline\" && item[header]) {\n                  return <td key={i}>{item[header].en.name}</td>;\n                }\n                if (header === \"codeShareData\") {\n                  return <td key={i}>{item[header][0].codeShare}</td>;\n                }\n                if (header === \"timeDepShedule\" && item[header]) {\n                  return <td key={i}>{item[header].match(\"[0-9:]{5}\")[0]}</td>;\n                }\n                if (header === \"timeArrShedule\" && item[header]) {\n                  return <td key={i}>{item[header].match(\"[0-9:]{5}\")[0]}</td>;\n                }\n                return <td key={i}>{item[header]}</td>;\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Table;\n","import React, { Component } from \"react\";\nimport { getData } from \"./api/api\";\nimport { currentDay } from \"./services/service\";\nimport Header from \"./components/Header/Header\";\nimport Search from \"./components/Search/Search\";\nimport Table from \"./components/Table/Table\";\n\nclass App extends Component {\n  state = {\n    data: null,\n    searchValue: \"\",\n    status: \"departure\",\n    day: \"today\"\n  };\n\n  componentDidMount() {\n    const day = this.defineDayDate(this.state.day);\n    getData(day).then(data => {\n      this.setState({\n        data,\n        filteredData: this.getDataByStatus(this.state.status, this.state.data)\n      });\n    });\n  }\n\n  defineDayDate = day => {\n    if (day === \"yesterday\") return currentDay(-1);\n    if (day === \"tomorrow\") return currentDay(1);\n    return currentDay(0);\n  };\n\n  componentDidUpdate(prevProp, prevState) {\n    if (prevState.day !== this.state.day) {\n      const day = this.defineDayDate(this.state.day);\n      getData(day).then(data => {\n        this.setState({ data });\n      });\n    }\n  }\n\n  handleSubmit = (event, textInput) => {\n    event.preventDefault();\n    this.setState({ searchValue: textInput.current.value });\n  };\n\n  switchTabTo = type => {\n    if (this.state.status === type) return;\n    this.setState({ status: type });\n  };\n\n  getDataByStatus = (status, data) => {\n    if (!data) return null;\n    if (status === \"departure\") {\n      return data.departure;\n    } else return data.arrival;\n  };\n\n  handleDayTabTo = day => {\n    if (this.state.day === day) return;\n    this.setState({\n      data: null,\n      day: day\n    });\n  };\n\n  filteredList = (list, searchValue) => {\n    if (list) {\n      return list.filter(item => {\n        return (\n          (item[\"airportToID.name_en\"] &&\n            item[\"airportToID.name_en\"]\n              .toLowerCase()\n              .includes(searchValue.toLowerCase())) ||\n          (item[\"airportFromID.name_en\"] &&\n            item[\"airportFromID.name_en\"]\n              .toLowerCase()\n              .includes(searchValue.toLowerCase())) ||\n          item.codeShareData[0].codeShare\n            .toLowerCase()\n            .includes(searchValue.toLowerCase())\n        );\n      });\n    } else {\n      return null;\n    }\n  };\n\n  render() {\n    const { status, data, day, searchValue } = this.state;\n    let list = this.getDataByStatus(status, data);\n    const activeDep = status === \"departure\" ? \"active\" : \"\";\n    const activeArr = status === \"arrival\" ? \"active\" : \"\";\n    list = this.filteredList(list, searchValue);\n    return (\n      <>\n        <Header />\n        <div className=\"main-container\">\n          <Search onChange={this.handleInput} onSubmit={this.handleSubmit} />\n          <div className=\"search-results\">\n            <div className=\"main-tabs\">\n              <ul className=\"tabs\">\n                <li\n                  className={`tabs-item ${activeDep}`}\n                  onClick={() => this.switchTabTo(\"departure\")}\n                >\n                  <span className={`tabs-item-link ${activeDep}`}>\n                    departures\n                  </span>\n                </li>\n                <li\n                  className={`tabs-item ${activeArr}`}\n                  onClick={() => this.switchTabTo(\"arrival\")}\n                >\n                  <span className={`tabs-item-link ${activeArr}`}>\n                    arrivals\n                  </span>\n                </li>\n              </ul>\n              <div className=\"tabs-container\">\n                <div className=\"date-wrap\">\n                  <div className=\"dates-container\">\n                    <div\n                      className={`date yesterday ${\n                        day === \"yesterday\" ? \"active\" : \"\"\n                      }`}\n                      onClick={() => this.handleDayTabTo(\"yesterday\")}\n                    >\n                      <div className=\"date-num\">{currentDay(-1)}</div>\n                      <div className=\"date-title\">Yesterday</div>\n                    </div>\n                    <div\n                      className={`date today ${\n                        day === \"today\" ? \"active\" : \"\"\n                      }`}\n                      onClick={() => this.handleDayTabTo(\"today\")}\n                    >\n                      <div className=\"date-num\">{currentDay(0)}</div>\n                      <div className=\"date-title\">Today</div>\n                    </div>\n                    <div\n                      className={`date tomorrow ${\n                        day === \"tomorrow\" ? \"active\" : \"\"\n                      }`}\n                      onClick={() => this.handleDayTabTo(\"tomorrow\")}\n                    >\n                      <div className=\"date-num\">{currentDay(1)}</div>\n                      <div className=\"date-title\">Tomorrow</div>\n                    </div>\n                  </div>\n                </div>\n                {data ? <Table data={list} status={status} /> : \"Loading...\"}\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}